variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - doc
  - build_and_test
  - deploy
  - publish


.junit-artifacts: &junit-artifacts
  artifacts:
    when: always
    paths:
      - sim/sim_logs/ts_sim_junit_out.xml
    reports:
      junit: sim/sim_logs/ts_sim_junit_out.xml


.coverage-and-junit-artifacts: &coverage-and-junit-artifacts
  artifacts:
    when: always
    paths:
      - sim/sim_logs/ts_sim_junit_out.xml
      - sim/coverage_output/
    reports:
      junit: sim/sim_logs/ts_sim_junit_out.xml


build_programmer_guide:
  stage: doc
  tags:
    - shell
  script:
    - source ./setup_env
    - cd doc/programmer_guide
    - ts_latex_build.py spect_programmer_guide.tex
  artifacts:
    when: always
    paths:
      - doc/programmer_guide/build/pdf/spect_programmer_guide.pdf

build_isa_v0.1:
  stage: doc
  tags:
    - shell
  script:
    - source ./setup_env
    - cd doc/ISAv0.1
    - ts_latex_build.py isav0.1.tex
  artifacts:
    when: always
    paths:
      - doc/ISAv0.1/build/pdf/isav0.1.pdf

build_isa_v0.2:
  stage: doc
  tags:
    - shell
  script:
    - source ./setup_env
    - cd doc/ISAv0.2
    - ts_latex_build.py isav0.2.tex
  artifacts:
    when: always
    paths:
      - doc/ISAv0.2/build/pdf/isav0.2.pdf

###################################################################################################
# Build compiler and test it
###################################################################################################
build_and_test_compiler:
  stage: build_and_test
  tags:
    - shell
  script:
    - source ./setup_env
    - ./build.sh

    - cd build
    - make test

  artifacts:
    when: always
    paths:
      - build/src/apps/spect_*
      - build/src/cosim/libspect_iss_dpi.so
      - src/cosim/spect_iss_dpi_pkg.sv
      - src/cosim/spect_instr_gen_coverage.svh


###################################################################################################
# Deploy the compiler
###################################################################################################
deploy_compiler:
  stage: deploy
  only:
    - tags
  when: manual
  tags:
    - shell
  script:
    - export VERSION=`git describe --tags --abbrev=0`
    - export DEST_FOLDER=/tools/tropic/ts-spect-compiler

    # Will fail if concrete version directory already exists. This will avoid
    # re-placing older version with new if we forget to add new tag!
    - mkdir -p $DEST_FOLDER
    - mkdir $DEST_FOLDER/$VERSION

    - cp build/src/apps/spect_* $DEST_FOLDER/$VERSION
    - cp build/src/cosim/libspect_iss_dpi.so $DEST_FOLDER/$VERSION

    - cp src/cosim/spect_iss_dpi_pkg.sv $DEST_FOLDER/$VERSION
    - cp src/cosim/spect_instr_gen_coverage.svh $DEST_FOLDER/$VERSION

    - cp doc/programmer_guide/build/pdf/spect_programmers_guide.pdf $DEST_FOLDER/$VERSION


###################################################################################################
# Publish built documentation
###################################################################################################
pages:
    tags:
      - shell
    stage: publish
    when: always
    script:
      - echo "Publishing pages..."
      - mkdir -p public
      - cp doc/programmer_guide/build/pdf/spect_programmers_guide.pdf public

    artifacts:
      paths:
        - public
